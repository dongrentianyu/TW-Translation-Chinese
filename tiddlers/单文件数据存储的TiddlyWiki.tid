created: 20230715091550919
creator: 马不前
modified: 20230715163128482
modifier: 马不前
original-title: Data Storage in Single File TiddlyWiki
tags: Data-Storage doc 新的开发者文档 数据储存
title: 单文件数据存储的TiddlyWiki

在 TiddlyWikiv5.1.23及之前的版本中TiddlyWiki的条目保存在HTML文件中的两个 `<div>` 标签之一，具体取决于TiddlyWiki是否配置了加密。

!!! 未加密
如果TiddlyWiki没有加密，数据将存储在一个带有 `id` 属性为"storeArea"的 `<div>` 标签中。

```html
<div id="storeArea" style="display:none;">
```

在存储区域 `<div>` 中，每个条目都存储在自己的 `<div>` 中。

//条目DIV//

每个条目 `<div>` 都有一个对应于条目的每个字段的属性，除了文本字段，它保存在 `<div>` 内的 `pre` 标签中。请注意，所有属性（因此字段名称）必须是小写字母、数字或字符 `-`（破折号）、`_`（下划线）和 `.`（句点）。唯一必需的属性是 `title`，所有其他属性都是可选的。所有属性值和 `pre` 标签中的文本字段都是 HTML 编码的。

示例：

```html
<div id="storeArea" style="display:none;">
<div created="20140611153703343" modified="20140611153734589" tags="testTag" testfield="testvalue" title="TestTiddler" type="text/plain">
<pre>testText</pre>
</div>
</div>
```

!!! 加密

如果~TiddlyWiki被配置为加密其内容，那么条目将以加密的JSON字符串形式存储在一个具有`id`属性为"encryptedStoreArea"的`<pre>`标签中。

```html
<pre id="encryptedStoreArea" type="text/plain" style="display:none;">
```

TiddlyWiki使用[[Stanford JavaScript Crypto Library|http://bitwiseshiftleft.github.io/sjcl/]]来进行加密。

---
!! 从v5.2.0版本

从v5.2.0版本开始，TiddlyWiki引入了一种新的基于JSON的格式用于未加密内容的条目存储区域，同时保留了对上述旧存储区域格式的支持，以实现向后兼容。对于加密内容，存储区域格式保持不变。

!! 没有加密

默认情况下，所有条目现在都以一个JSON对象数组的形式存储在一个带有`class`属性为"tiddlywiki-tiddler-store"和`type`属性为"application/json"的`<script>`标签内。为了更好的可读性，每个条目对象都单独占据一行。对于条目字段名称，不再有任何字符限制。然而，`<script>`标签的存储区域必须将`<`字符编码为`\u003c`。

```html
<script class="tiddlywiki-tiddler-store" type="application/json">[
{"title":"XLSX Utilities Edition","created":"20161023202301847","modified":"20161023202301847","tags":"Editions","type":"text/vnd.tiddlywiki","text":"The ''XLSX Utilities'' edition of TiddlyWiki contains tools to work with `.XLSX` spreadsheets generated by applications like Microsoft Excel and Google Sheets. It can be used in the browser or under Node.js.\n\nhttps://tiddlywiki.com/editions/xlsx-utils/\r\n"},
{"text":"In accordance with the [[Philosophy of Tiddlers]], documentation tiddlers are typically short and interlinked.\n\nWhen a tiddler seems as if it needs to contain subheadings, this is often a sign that it should in fact be split into several tiddlers. But it is reasonable for a [[reference tiddler|Reference Tiddlers]] to consist of an untitled introductory section followed by a titled section of details.\n\nConsistency of terminology is essential if the reader is not to become confused. Consistent typography and punctuation lend a professional quality to the documentation. Macros can improve the consistency and maintainability of the text.\n\nUse numbered lists for step-by-step instructions, and bullet points for lists whose order is arbitrary. Use a definition list in preference to a bulleted list if each bulleted item would begin with a term and a colon. If at all possible, avoid burdening the reader with a nested list.\n\nUse a table when information naturally falls into three or more columns, and also for lists of parameters, attributes, etc in [[reference tiddlers|Reference Tiddlers]].\n\nAvoid periods at the end of list items, headings and table cell text.\n\nThe documentation describes the current reality of ~TiddlyWiki. Avoid discussing future aspirations.\n","title":"Tiddler Structure","tags":"[[Improving TiddlyWiki Documentation]]","modified":"20210207124737959","created":"20150110183300000"}
]</script>
```

为了保持与可能直接操作TiddlyWiki HTML文件插入条目的外部工具的兼容性，在新的 `<script>` 标签存储区之后，旧的 `<div>` 存储区格式仍然存在于HTML文件中：

```html
<script class="tiddlywiki-tiddler-store" type="application/json">[
{"title":"XLSX Utilities Edition","created":"20161023202301847","modified":"20161023202301847","tags":"Editions","type":"text/vnd.tiddlywiki","text":"The ''XLSX Utilities'' edition of TiddlyWiki contains tools to work with `.XLSX` spreadsheets generated by applications like Microsoft Excel and Google Sheets. It can be used in the browser or under Node.js.\n\nhttps://tiddlywiki.com/editions/xlsx-utils/\r\n"},
{"text":"In accordance with the [[Philosophy of Tiddlers]], documentation tiddlers are typically short and interlinked.\n\nWhen a tiddler seems as if it needs to contain subheadings, this is often a sign that it should in fact be split into several tiddlers. But it is reasonable for a [[reference tiddler|Reference Tiddlers]] to consist of an untitled introductory section followed by a titled section of details.\n\nConsistency of terminology is essential if the reader is not to become confused. Consistent typography and punctuation lend a professional quality to the documentation. Macros can improve the consistency and maintainability of the text.\n\nUse numbered lists for step-by-step instructions, and bullet points for lists whose order is arbitrary. Use a definition list in preference to a bulleted list if each bulleted item would begin with a term and a colon. If at all possible, avoid burdening the reader with a nested list.\n\nUse a table when information naturally falls into three or more columns, and also for lists of parameters, attributes, etc in [[reference tiddlers|Reference Tiddlers]].\n\nAvoid periods at the end of list items, headings and table cell text.\n\nThe documentation describes the current reality of ~TiddlyWiki. Avoid discussing future aspirations.\n","title":"Tiddler Structure","tags":"[[Improving TiddlyWiki Documentation]]","modified":"20210207124737959","created":"20150110183300000"}
]</script><div id="storeArea" style="display:none;"></div>
```

在旧的`<div>`存储区格式中的任何条目也会在新的 `<script>` 存储区格式中的条目之前加载。

!!! 多个存储区和优先级

新的 `<script>` 标签存储区中的条目将按照它们在 HTML 文件中出现的顺序加载。因此，如果同一个条目存在于两个不同的 `<script>` 标签存储区中，则后一个存储区中的条目会覆盖前一个。但是需要注意的是，`<script>` 标签存储区中的条目总是优先于旧的 `<div>` 存储区中的条目。因此，来自旧的 `<div>` 存储区的条目永远不能覆盖来自 `<script>` 标签存储区的条目。

需要注意的是，在 HTML 文件中位于 `$:/boot.js` 模块之前的所有带有 `class` 属性 "tiddlywiki-tiddler-store" 的 `<script>` 标签，它们的内容将被解析为 JSON，并作为条目加载。

这使得外部工具可以通过在 HTML 文件的开头添加额外的 `<script>` 标签来轻松地将条目插入到 HTML 文件中：

```html
<script class="tiddlywiki-tiddler-store" type="application/json">[
{"created":"20210525212411223","text":"This is some test text","tags":"[[test tag]] [[another tag]]","title":"My new tiddler to insert","modified":"20210525212430577"}
]</script>
<!doctype html>
...
```

虽然这种方式的HTML不合法，但已知的浏览器会默默地将脚本标签移动到一个有效的位置，位于body标签的结束标记之前。

其他主题：

* [[从单文件TiddlyWiki中提取条目]]
