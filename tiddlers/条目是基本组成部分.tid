chapter.of: TiddlyWiki - A quick Overview
created: 20230706122427142
creator: 马不前
modified: 20230706130142409
modifier: 马不前
original-title: Tiddler as Basic Element
sub.num: 6
tags: doc [[TiddlyWiki - 快速概览]]
title: 条目是基本组成部分

通过将应用程序的几乎每一部分都作为条目来管理，应用程序只需要提供一些基本的功能来管理各个条目，加载和持久化它们，将它们渲染成HTML输出，并提供一种方法来储存对条目的修改。

这样，整个wiki应用程序就可以从这些简单的概念中建立起来。


<<<
插件可以用来为现有的模块添加新的功能，甚至可以用来替换单个的条目/模块、使得开发者能够在TiddlyWiki的基础系统上构建全新的应用程序。
<<<

条目是TiddlyWiki系统中最小的单元。它可以包含任何数据，如纯文本、WikiText标记、JavaScript代码（模块条目）、JSON结构（JSON结构甚至可能包含额外的条目。插件就是这样实现的，可以在一个插件的条目里中打包多个条目），SVG格式的图片可以是用base64编码的二进制图片。

在内部，条目是不可变的对象，包含一堆称为字段的键值对。条目唯一必要字段是标题字段。条目的标准字段列在下面。TiddlyWiki中的几乎所有东西都是以条目的形式加载的。例如，插件是一堆作为单个JSON条目分发的多个条目。唯一的例外是[[微内核]]，它并不是一个条目。

<<glossary "created" "创建时间，自1970年1月1日以来的毫秒数。">>
<<glossary "modified" "修改时间，自1970年1月1日以来的毫秒数。">>
<<glossary "tags" "以空格隔开的标签列表。含有空白的标签被包裹起来，例如，`xxx [[hi xx]]`。">>
<<glossary "type" "条目的类型，例如text/plain或text/vnd.tiddlywiki。">>
<<glossary "title" "条目的标题">>
<<glossary "list" "与某个条目相关的条目标题的有序列表">>

条目被用于多种角色和不同层面。开发者使用条目作为包含应用程序代码、配置值的基本元素，甚至作为一种变量形式来保存当前的用户界面状态。

在另一个层面上，条目也是wiki用户的基本工作单位，例如，各个wiki页面都是作为条目实现的。

这样做有很多原因，也非常有意义：因为TiddlyWiki的用户界面是由条目构建的，wiki用户可以通过编辑一个wiki页面来编辑他自己的的界面。

例如，要在侧边栏上添加一个条目链接列表，用户只需要创建一个新的条目，把链接放到这个条目中，然后用`$:/tags/SideBar`来标记这个条目。

这样，用户就可以通过使用他已经用于管理维基页面的机制来定制他的工作环境。

条目由字段组成。当把条目作为wiki页面使用时，用户可以使用这些字段来存储元信息，如标签。

因为元数据的字段，特别是标签，是用户组织他的维基页面的一个简单方法，所以TiddlyWiki提供了一个特殊的筛选机制，使用元数据来选择条目。

像`[tag[learncard]topic[math]!tag[successful]]`这样的筛选器将筛选所有被标记为 "learncard"、并且topic-field中的值为"math "，且未被标记为"successful"的条目。

用户可以将这个筛选器与`<$list>`部件一起使用，以显示一个wiki页面中尚未成功回答的所有数学学习卡的列表。

另一个例子显示了"任何东西都是条目"的概念，如何使用某个单一功能带来巨大好处，这就是拖放功能。

HTML5标准配备了一个原生的拖放功能。TiddlyWiki使用了这一功能，使得将一个条目从一个wiki拖放到另一个wiki成为可能。

由于任何东西都是条目，这带来了在TiddlyWiki实例之间拖放单个wiki页面、JavaScript模块、UI组件和整个插件的能力。