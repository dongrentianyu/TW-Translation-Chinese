created: 20230711022917560
creator: 马不前
description: 这里对TiddlyWiki进行了简要总结，突出了它的优点、缺点和使用经验。
modified: 20230711023625665
modifier: 马不前
original-title: Conclusion
sectionnumber: 5
tags: section doc TiddlyWiki/Dev
title: 结论

TiddlyWiki的核心只包含一个基本的微内核，提供了简单的tiddlerstore（存储小部件）和模块系统。它使用JavaScript编写，并适用于在浏览器中运行或作为node.js应用程序运行。核心插件通过中央事件系统和复杂的小部件系统将WikiText转换为动态HTML，从而扩展了微内核的功能。由于其微内核架构，该应用程序可以高度定制。插件系统不仅允许添加新模块，还可以覆盖现有模块。大多数组件不直接引用模块，而是按类型加载它们，允许开发人员注入附加模块，包括新的保存程序实现、小部件甚至是用于WikiText解析器的规则。TiddlyWiki的用户界面是使用WikiText编写的，并且可以使用相同的语言进行自定义，这是用户在编写wiki条目时通常使用的语言。

核心插件的一个缺点是它的复杂性。虽然微内核只提供一些基本的功能和结构，但核心插件一次性添加了许多组件。将核心架构分解并理解组件之间的连接可能具有挑战性。本文档只能涵盖最重要的部分。这使开发人员可以选择在微内核上构建一个全新的应用程序，或者在核心插件上构建应用程序，包括所有的模块和UI条目。

总而言之，TiddlyWiki是一款有趣的软件。它专注于条目，核心提供的功能以及核心插件提供的完整的wiki应用程序使TiddlyWiki成为个人信息管理领域的一部分，特别是当将TiddlyWiki作为一个单一文件应用程序，在单个HTML文件中存储代码和数据时。但是，其高度可定制的性质使得TiddlyWiki非常适合这个领域。普通用户可以使用标签和元数据来组织信息，并通过自定义UI来实现自己的工作流程，只需使用WikiText即可。JavaScript开发人员可以通过构建在微内核上或自定义核心插件，添加全新的功能并创建全新的单页面应用程序。